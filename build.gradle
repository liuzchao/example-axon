ext {
    aspectjVersion = '1.7.4'
    axonVersion = '2.1.2'
    groovyVersion = '2.2.2'
    springVersion = '4.0.3.RELEASE'
}

allprojects {
    group = 'example-axon'
    version = '1.0'

    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
    }
}

configure(subprojects.findAll { it.name =~ '-api' }) {
    apply plugin: 'groovy'

    dependencies {
        compile("org.codehaus.groovy:groovy-all:${groovyVersion}")
    }
}

configure(subprojects.findAll { it.name =~ '-impl' }) {
    apply plugin: 'spring-boot'

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-amqp')

        compile("org.axonframework:axon-core:${axonVersion}")
        compile("org.axonframework:axon-amqp:${axonVersion}")
    }
}

project(':management-impl') {
    dependencies {
        compile project(':management-api')

        compile("org.springframework.boot:spring-boot-starter-data-mongodb")
        compile("org.springframework.boot:spring-boot-starter-data-rest")
        compile('org.springframework.boot:spring-boot-starter-web')
    }
}

project(':payments-impl') {
    dependencies {
        compile project(':payments-api')
    }
}

project(':registrations-impl') {
    dependencies {
        compile project(':management-api')
        compile project(':payments-api')
        compile project(':registrations-api')
    }
}

project(':conference-client') {
    dependencies {
        compile project(':management-api')
        compile project(':management-impl')
        compile project(':payments-api')
        compile project(':registrations-api')

        compile("com.fasterxml.jackson.core:jackson-databind:2.3.3")
        compile("com.jayway.restassured:rest-assured:2.3.1")
    }
}

project(':conference-configuration') {
    dependencies {
        compile("org.aspectj:aspectjweaver:${aspectjVersion}")

        compile("org.axonframework:axon-core:${axonVersion}")
        compile("org.axonframework:axon-amqp:${axonVersion}")
    }
    /*
    dependencies {
        compile project(':management-impl')
        compile project(':payments-impl')
        compile project(':registrations-impl')

        compile('org.springframework.boot:spring-boot-starter-web')
        testCompile('org.springframework.boot:spring-boot-starter-test')


        compile("org.springframework:spring-aop:${springVersion}")
        compile("org.springframework:spring-tx:${springVersion}")
    }
    */
}

buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.0.2.RELEASE')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
